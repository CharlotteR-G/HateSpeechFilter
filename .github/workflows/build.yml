name: Build and Deploy

on: 
  push:
    branches:
      - main

permissions:
  id-token: write  # âœ… Required for Azure OIDC authentication
  contents: read
  packages: write    

jobs:
  python-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install packages
        run: pip install -r requirements.txt
      - name: Run flake8
        run: flake8 .
        if: ${{ success() }}
        
  unit-tests:
    needs: python-formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install packages
        run: pip install -r requirements.txt
      - name: Install pytest
        run: pip install pytest
      - name: Run tests
        run: pytest tests.py

  build-and-push-docker:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/sse-groupies/commentfilter/comment-filter:latest
          docker build -t $IMAGE_NAME .
      
      - name: Push Docker image
        run: |
          docker push ghcr.io/sse-groupies/commentfilter/comment-filter:latest

  deploy-to-azure:
    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container Apps
        run: |
          RG="${{ secrets.AZURE_RESOURCE_GROUP }}"
          APP_NAME="${{ secrets.AZURE_COMMENT_FILTER_APP_NAME }}"
          LOCATION="${{ secrets.AZURE_LOCATION }}"
          IMAGE_NAME="ghcr.io/sse-groupies/commentfilter/comment-filter:latest"

          az containerapp create \
            --name $APP_NAME \
            --resource-group $RG \
            --image $IMAGE_NAME \
            --environment $RG-env \
            --target-port 7000 \
            --ingress external \
            --registry-server ghcr.io \
            --registry-username "${{ github.actor }}" \
            --registry-password "${{ secrets.GHCR_TOKEN }}" \
            --location $LOCATION || \
          az containerapp update \
            --name $APP_NAME \
            --resource-group $RG \
            --image $IMAGE_NAME
